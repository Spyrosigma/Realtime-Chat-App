/*
  # Chat Application Schema

  1. New Tables
    - `users`
      - `id` (uuid, primary key) - matches auth.users id
      - `email` (text, unique)
      - `username` (text, unique)
      - `created_at` (timestamp)
    - `messages`
      - `id` (bigint, primary key)
      - `content` (text)
      - `sender_id` (uuid, references users)
      - `receiver_id` (uuid, references users)
      - `sender_email` (text)
      - `created_at` (timestamp)
  
  2. Security
    - Enable RLS on both tables
    - Add policies for user profile access
    - Add policies for message access
*/

-- Drop existing tables if they exist
DROP TABLE IF EXISTS public.messages;
DROP TABLE IF EXISTS public.users;

-- Create users table
CREATE TABLE public.users (
    id uuid PRIMARY KEY REFERENCES auth.users,
    email text UNIQUE NOT NULL,
    username text UNIQUE NOT NULL,
    created_at timestamptz DEFAULT now()
);

-- Enable RLS for users table
ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;

-- Users can read all other users (for search)
CREATE POLICY "Users can view all profiles"
    ON public.users
    FOR SELECT
    TO authenticated
    USING (true);

-- Users can only update their own profile
CREATE POLICY "Users can update own profile"
    ON public.users
    FOR UPDATE
    TO authenticated
    USING (auth.uid() = id);

-- Create messages table
CREATE TABLE public.messages (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content text NOT NULL,
    sender_id uuid NOT NULL,
    receiver_id uuid NOT NULL,
    sender_email text NOT NULL,
    created_at timestamptz DEFAULT now(),
    FOREIGN KEY (sender_id) REFERENCES public.users(id),
    FOREIGN KEY (receiver_id) REFERENCES public.users(id)
);

-- Enable RLS for messages table
ALTER TABLE public.messages ENABLE ROW LEVEL SECURITY;

-- Users can read messages where they are either sender or receiver
CREATE POLICY "Users can read their own messages"
    ON public.messages
    FOR SELECT
    TO authenticated
    USING (
        auth.uid() IN (sender_id, receiver_id)
    );

-- Users can insert messages only as themselves
CREATE POLICY "Users can send messages"
    ON public.messages
    FOR INSERT
    TO authenticated
    WITH CHECK (auth.uid() = sender_id);